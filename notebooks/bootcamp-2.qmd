"set lib path"
.libPaths(c('/usr/local/lib/R/site-library', '/usr/local/lib/R/library'))

library(future)
plan()

plan("multisession", workers = 8)
plan()

set.seed(61)
options(future.globals.maxSize = 4000 * 1024^2)
nb.start.time <- Sys.time()

#Importing

library(RColorBrewer)
library(Seurat)
library(patchwork)
library(ggplot2)
library(dplyr)
library(hdf5r)
library(stringr)
library(biomaRt)
library(viridis)

mice.data <- Read10X(data.dir = "/oscar/data/shared/databases/dennery_scrna/AirD60out/filtered_feature_bc_matrix/")
mice <- CreateSeuratObject(counts = mice.data, project = "senescence", min.cells = 3, min.features = 200)

mice
mice@assays

head(mice@meta.data)

mice[["RNA"]] <- split(mice[["RNA"]], f = mice$orig.ident)
mice

#DataQC

rownames(mice) %>% grep(pattern = '^mt-', ignore.case = TRUE, value = TRUE)
#"mt-Rnr1" "mt-Rnr2"

mice[["percent.mt"]] <- PercentageFeatureSet(mice, pattern = "^MT-")
Idents(mice) <- 'orig.ident'

levels(mice) <- c("IMMUNE_CTRL", "IMMUNE_STIM")
#Error: NA's generated by missing levels

VlnPlot(mice, features = "nFeature_RNA")
#Warning: Default search for "data" layer in "RNA" assay yielded no results; utilizing "counts" layer instead.

VlnPlot(mice, features = "nCount_RNA")
#same warning " "

VlnPlot(mice, features="percent.mt")
#All cells have the same value of percent.mt.

FeatureScatter(mice, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
FeatureScatter(mice, feature1 = "nCount_RNA", feature2 = "percent.mt")
FeatureScatter(mice, feature1 = "nFeature_RNA", feature2 = "percent.mt")
#warning: n cor(x = data[, 1], y = data[, 2]) : the standard deviation is zero


qc_data <- mice@meta.data[c('orig.ident','nCount_RNA','nFeature_RNA','percent.mt')] %>% arrange(percent.mt)
ggplot(qc_data, aes(x = nCount_RNA, y = nFeature_RNA, color = percent.mt)) + 
  geom_point() + 
  scale_color_gradientn(colors = rev(brewer.pal(5, "Spectral")), limits = c(0,10), oob = (scales::squish)) +
  facet_wrap(~orig.ident) + 
  theme_bw()
  
#Data Filtering

mice_sub <- subset(mice, subset = nFeature_RNA > 500 & nFeature_RNA < 7000 & percent.mt < 5 & nCount_RNA > 1000)

mice <- subset(mice, subset = nFeature_RNA > 500 & nFeature_RNA < 7000 & percent.mt < 5 & nCount_RNA > 1000)
mice_sub<- subset(mice_sub, cells = sample(x = rownames(mice_sub@assays$RNA@cells@.Data), size = 4000) )
#changed sample from 5000 to 4000 because sample is 4419 samples
table(mice_sub@meta.data$orig.ident)

#Error: Error in sample.int(length(x), size, replace, prob) : cannot take a sample larger than the population when 'replace = FALSE'

#Normalization

start.time <- Sys.time()
mice_sub <- SCTransform(mice_sub, vars.to.regress = "percent.mt", verbose = FALSE, return.only.var.genes = FALSE)
end.time <- Sys.time()
end.time - start.time


mice_sub <- RunPCA(mice_sub)
ElbowPlot(mice_sub)

#Integration

#Anchor-based CCA integration (method=CCAIntegration)

mice_sub <- IntegrateLayers(
  object = mice_sub, method = CCAIntegration,
  orig.reduction = "pca", new.reduction = "integrated.cca", normalization.method = "SCT",
  verbose = FALSE
)

